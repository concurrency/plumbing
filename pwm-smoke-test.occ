#INCLUDE "plumbing.module"

PROC run(VAL INT ms, CHAN SIGNAL stop.all!)
  SEQ
    delay(ms)
    stop.all ! SIGNAL
:

PROC oscilate(VAL INT step, CHAN INT level!, CHAN SIGNAL stop.pwm!, CHAN SIGNAL stop.all?)
  INITIAL INT count IS 0:
  INITIAL BOOL run IS TRUE:
  WHILE run
    SEQ
      WHILE count < 255
        SEQ
          level ! count
          count := count + 1
          delay(step)
      WHILE count > 0
        SEQ
          level ! count
          count := count - 1
          delay(step)
      ALT
        stop.all ? SIGNAL
          SEQ
            run := FALSE
            stop.pwm ! SIGNAL
        SKIP
          run := TRUE
          
:
VAL []INT PINS IS [6, 5, 9, 10, 3, 11]:
PROC main()
  SEQ
    beginSerial(57600)
    PAR i = 0 FOR 6
      CHAN INT level:
      CHAN SIGNAL stop.all:
      CHAN SIGNAL stop.pwm:
      PAR
        run(3000, stop.all!)
        oscilate(0, level!, stop.pwm!, stop.all?)
        pwm(PINS[i], stop.pwm?, level?)
:

PROC just.three ()
  SEQ
    beginSerial(57600)
    CHAN INT level:
    CHAN SIGNAL stop.all:
    CHAN SIGNAL stop.pwm:
    WHILE TRUE
      PAR
        run(10000, stop.all!)
        oscilate(0, level!, stop.pwm!, stop.all?)
        pwm(3, stop.pwm?, level?)
:

VAL []INT try IS [11, 6, 5, 3]:
PROC wonky()
  SEQ
    beginSerial(57600)
    SEQ i = 0 FOR (SIZE try)
      SEQ
        beginAnalog(try[i])
        analogLevel(try[i], 128)
        delay(1000)
:

PROC choose ()
  -- just.three()
  --main()
  wonky()
:
