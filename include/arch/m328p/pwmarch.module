--** Pulse Width Modulation board-specific helper functions for the ATmega328
-- @module pwm_arch


#IF NOT (DEFINED (PWMARCH.MODULE))
#DEFINE PWMARCH.MODULE

INT, INT, INT, INT FUNCTION pwm8.lookup (VAL INT pin)
  INT TCCRnA, TCCRnB, TCCRnA.bits, OCRnx:
  VALOF
    SEQ
      CASE pin
        5, 6
          SEQ
            TCCRnA := TCCR0A
            TCCRnB := TCCR0B
            IF
              pin = 6
                SEQ
                  TCCRnA.bits := BV (WGM00) \/ BV (COM0A1)
                  OCRnx := OCR0A
              TRUE --pin = 5
                SEQ
                  TCCRnA.bits := BV (WGM00) \/ BV (COM0B1)
                  OCRnx := OCR0B
        9, 10
          SEQ
            TCCRnA := TCCR1A
            TCCRnB := TCCR1B
            IF
              pin = 9
                SEQ
                  TCCRnA.bits := BV (WGM10) \/ BV (COM1A1)
                  OCRnx := OCR1A
              TRUE --pin = 10
                SEQ
                  TCCRnA.bits := BV (WGM10) \/ BV (COM1B1)
                  OCRnx := OCR1B
        3, 11
          SEQ
            TCCRnA := TCCR2A
            TCCRnB := TCCR2B
            IF
              pin = 11
                SEQ
                  TCCRnA.bits := BV (WGM20) \/ BV (COM2A1)
                  OCRnx := OCR2A
              TRUE --pin = 3
                SEQ
                  TCCRnA.bits := BV (WGM20) \/ BV (COM2B1)
                  OCRnx := OCR2B
        ELSE
          die ("The Arduino only supports 8-bit PWM on pins 3,5,6,9,10 and 11.")
    RESULT TCCRnA, TCCRnB, TCCRnA.bits, OCRnx
:

INT, INT, INT, INT FUNCTION pwm16.lookup (VAL INT pin)
  INT TCCRnA, TCCRnB, TCCRnA.bits, OCRnx:
  VALOF
    SEQ
      TCCRnA := TCCR1A
      TCCRnB := TCCR1B
      CASE pin
        9
          SEQ
            TCCRnA.bits := BV (COM1A1)
            OCRnx := OCR1A
        10
          SEQ
            TCCRmA.bits := BV (COM1B1)
            OCRnx := OCR1B
        ELSE
          die ("The Arduino only supports 16-bit PWM on pins 9 and 10.")
    RESULT TCCRnA, TCCRnB, TCCRnA.bits, OCRnx
:

INT FUNCTION pwm8.TCCRnB.helper (VAL INT prescale)
  INT bits:
  VALOF
    SEQ
      CASE prescale
        0
          bits := 1 -- := BV (CSn0)
        8
          bits := 2 -- := BV (CSn1)
        64
          bits := 3 -- := BV (CSn0) \/ BV (CSn1)
        256
          bits := 4 -- := BV (CSn2)
        1024
          bits := 5 -- := BV (CSn2) \/ BV (CSn0)
        ELSE
          die ("Invalid clock prescale value")
    RESULT bits
:

INT FUNCTION pwm16.TCCRnB.helper (VAL INT prescale)
  INT bits:
  VALOF
    CASE prescale
      0
        bits := BV (WGM13) \/ 1 -- := BV (CSn0)
      8
        bits := BV (WGM13) \/ 2 -- := BV (CSn1)
      64
        bits := BV (WGM13) \/ 3 -- := BV (CSn0) \/ BV (CSn1)
      256
        bits := BV (WGM13) \/ 4 -- := BV (CSn2)
      1024
        bits := BV (WGM13) \/ 5 -- := BV (CSn2) \/ BV (CSn0)
      ELSE
        die ("Invalid clock prescale value")
  RESULT bits
:

INT FUNCTION pwm8.compare.lookup (VAL INT pin)
  INT OCRnx:
  VALOF
    CASE pin
      3
        OCRnx := OCR2B
      5
        OCRnx := OCR0B
      6
        OCRnx := OCR0A
      9
        OCRnx := OCR1A
      10
        OCRnx := OCR1B
      11
        OCRnx := OCR2A
      ELSE
        die ("The Arduino only supports 8-bit PWM on pins 3,5,6,9,10 and 11.")
  RESULT OCRnx
:

INT FUNCTION pwm16.compare.lookup (VAL INT pin)
  INT OCRnx:
  VALOF
    CASE pin
      9
        OCRnx := OCR1A
      10
        OCRnx := OCR1B
      ELSE
        die ("The Arduino only supports 16-bit PWM on pins 9 and 10.")
  RESULT OCRnx
:

INT FUNCTION pwm16.ICRn.lookup (VAL INT pin)
  INT ICRn:
  IF
    pin = 9 OR 10
      ICRn := IRC1
    TRUE
      die ("The Arduino only supports 16-bit PWM on pins 9 and 10.")
: 

#ENDIF
